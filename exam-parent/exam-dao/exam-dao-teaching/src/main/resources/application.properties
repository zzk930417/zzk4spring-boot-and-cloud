server.port=8010

#数据库配置
spring.datasource.url=jdbc:mysql://localhost:3306/cos?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#默认数据库连接池HikariCP配置（https://www.cnblogs.com/koal/p/12347974.html）

#最小空闲连接（核心连接数），默认值10，小于0或大于maximum-pool-size，都会重置为maximum-pool-size
spring.datasource.hikari.minimum-idle=10
#最大连接数，小于等于0会被重置为默认值10；大于零小于minimum-idle会被重置为minimum-idle的值
spring.datasource.hikari.maximum-pool-size=20
#空闲连接超时时间，默认值600000（10分钟），大于等于max-lifetime且max-lifetime>0，会被重置为0；不等于0且小于10秒，会被重置为10秒。
spring.datasource.hikari.idle-timeout=500000
#连接最大存活时间（如果该connection超过最大生命时长且空闲就会被回收），不等于0且小于30秒，
# 会被重置为默认值30分钟.为了防止大量的同一时间处于空闲连接因为数据库方的闲置超时策略断开连接（可以理解为连接雪崩），
# 一般将这个值设置的比数据库的“闲置超时时间”小几秒，以便这些连接断开后，HikariCP能迅速的创建新一轮的连接。
spring.datasource.hikari.max-lifetime=540000
#等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
spring.datasource.hikari.connection-timeout=60000
#用于测试连接是否可用的查询语句
spring.datasource.hikari.connection-test-query=SELECT 1


                                  #初始化过程和连接创建逻辑
#当HikariCP初始化时候，会将添加连接到池中，直到达到minimum-idle的数量，此时保持这个状态。
# 当有新的连接池请求时，HikariCP会返回一个connection的代理。当connection都处于使用状态时，
# 若此时有新的连接池请求，HikariCP就会继续新建connection直到达到maximun-pool-size。
# 若此时还有新的连接请求，那么就要等待连接池有空闲的连接，如果在规定或默认的超时时间内没有拿到
# 返回sqlexception,如果等到空闲连接就会执行，当高峰后需要进行连接回收，对于空闲连接，达到最大生命周期
# 或者最大超时时间都会释放

                                   #使用hikaricp的好处
# 1.基于bonecp,并进行了优化，使其效率很高并且体积很小，最重要的是稳定可靠。

#整合mybatis
mybatis.config-location=classpath:mybatis-config.xml
mybatis.mapperLocations=classpath:mapper/*.xml


